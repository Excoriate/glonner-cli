---
name: 'CI: CLI'

on: [push, pull_request]

defaults:
    run:
        shell: bash
        working-directory: app

jobs:
    ci:
        name: CI

        strategy:
            matrix:
                go-version: [1.18, 1.18.3]
                platform: [ubuntu-latest, windows-latest, macos-latest]

        runs-on: ${{ matrix.platform }}
        defaults:
            run:
                working-directory: app/cli

        steps:
            - name: Checkout Repository
              uses: actions/checkout@v2

            - name: Setup Go
              uses: actions/setup-go@v3
              with:
                  go-version: ${{ matrix.go-version }}

            - name: Install
              run: |
                  go version
                  go install

            - name: Vet
              run: |
                  go vet .

            - name: Fmt
              run: |
                  go fmt ./...

            - name: Test
              run: |
                  go test -v -cover -race -timeout 120s ./...

#    lint:
#        name: Linter
#        needs: [ci]
#
#        runs-on: ubuntu-latest
#        defaults:
#            run:
#                working-directory: app/cli
#
#        steps:
#            - name: Checkout Repository
#              uses: actions/checkout@v2
#
#            - name: Setup Go
#              uses: actions/setup-go@v3
#              with:
#                  go-version: 1.18
#
#            - name: Run Linter
#              run: |
#                  curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.46.2
#                  /home/runner/go/bin/golangci-lint --version
#                  /home/runner/go/bin/golangci-lint run ./... --color always -v

    build-binary:
        name: Build Binary
        needs: [ci]

        strategy:
            matrix:
                go-version: [1.18, 1.18.3]
                platform: [ubuntu-latest, windows-latest, macos-latest]

        runs-on: ${{ matrix.platform }}
        defaults:
            run:
                working-directory: app/cli

        steps:
            - name: Checkout Repository
              uses: actions/checkout@v2

            - name: Setup Go
              uses: actions/setup-go@v3
              with:
                  go-version: ${{ matrix.go-version }}

            - name: Go build
              run: |
                  go mod tidy
                  go build -v -o dist/glonner

            - name: Setup GoReleaser
              run: |
                  go install github.com/goreleaser/goreleaser@latest
                  goreleaser --version

            - name: GoReleaser Check
              run: |
                  goreleaser check

            - name: GoReleaser Snapshot release
              run: |
                  goreleaser release --snapshot --rm-dist --skip-publish
